<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://off-dngw.github.io/</id><title>Dongwoo!</title><subtitle>A minimal, portfolio, sidebar, bootstrap Jekyll theme with responsive web design and focuses on text presentation.</subtitle> <updated>2022-07-04T06:03:36+09:00</updated> <author> <name>off-dngw</name> <uri>https://off-dngw.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://off-dngw.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://off-dngw.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator> <rights> © 2022 off-dngw </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>m1 pro &amp; max JAVA JDK 환경설정</title><link href="https://off-dngw.github.io/posts/JAVA%ED%99%98%EA%B2%BD%EC%84%A4%EC%A0%95/" rel="alternate" type="text/html" title="m1 pro &amp; max JAVA JDK 환경설정" /><published>2022-01-25T00:00:00+09:00</published> <updated>2022-07-04T06:00:12+09:00</updated> <id>https://off-dngw.github.io/posts/JAVA%ED%99%98%EA%B2%BD%EC%84%A4%EC%A0%95/</id> <content src="https://off-dngw.github.io/posts/JAVA%ED%99%98%EA%B2%BD%EC%84%A4%EC%A0%95/" /> <author> <name>DongWoo Kim</name> </author> <category term="환경설정" /> <summary> m1 pro &amp;amp; max JAVA JDK 환경설정 1.JAVA 설치하기 2.JAVA가 설치 된 곳 확인하기 3.환경변수 설정 4.확인 1.JAVA 설치하기 brew install --cask adoptopenjdk11 홈브류에서 cask가 설치가 안되어 있을 때 brew install cask 2.JAVA가 설치 된 곳 확인하기 터미널에서 cd 또는 ls를 사용하여 home까지 찾는다. 대부분 이 주소를 따릅니다. /Library/Java/JavaVirtualMachines/adoptopenjdk-8.jdk/Contents/Home 3.환경변수 설정 1. vim ~/.zshrc 실행 export JAVA_HOME="/Library/Java/JavaV... </summary> </entry> <entry><title>자료구조 트리의 종류</title><link href="https://off-dngw.github.io/posts/%ED%8A%B8%EB%A6%AC%EC%9D%98%EC%A2%85%EB%A5%98/" rel="alternate" type="text/html" title="자료구조 트리의 종류" /><published>2022-01-25T00:00:00+09:00</published> <updated>2022-01-25T11:21:00+09:00</updated> <id>https://off-dngw.github.io/posts/%ED%8A%B8%EB%A6%AC%EC%9D%98%EC%A2%85%EB%A5%98/</id> <content src="https://off-dngw.github.io/posts/%ED%8A%B8%EB%A6%AC%EC%9D%98%EC%A2%85%EB%A5%98/" /> <author> <name>DongWoo Kim</name> </author> <category term="자료구조" /> <summary> 트리의 종류 정 이진 트리 포화 이진 트리 완전 이진 트리 정 이진 트리 정 이진트리는 잎새노드를 제외한 모든 노드가 자식 노드를 2개 또는 0개를 가진다. 포화 이진 트리 정 이진 트리이면서 완전 이진 트리인 경우입니다. 모든 리프 노드의 레벨이 동일하고, 모든 레벨이 가득 채워져 있는 완벽한 피라미드 구조를 가지고 있습니다. 모든 내부 노드가 두 개의 자식 노드를 가진다. 모든 말단 노드가 동일한 깊이 또는 레벨을 갖는다. 완전 이진 트리 완전 이진 트리는 마지막 레벨을 제외한 모든 레벨에서 노드들이 꽉 채워진 이진트리입니다. 그리고 데이터가 왼쪽부터 채워져야 합니다. </summary> </entry> <entry><title>자료구조 트리 순회 정리</title><link href="https://off-dngw.github.io/posts/%ED%8A%B8%EB%A6%AC%EC%88%9C%ED%9A%8C%EC%A0%95%EB%A6%AC/" rel="alternate" type="text/html" title="자료구조 트리 순회 정리" /><published>2022-01-25T00:00:00+09:00</published> <updated>2022-01-25T11:21:00+09:00</updated> <id>https://off-dngw.github.io/posts/%ED%8A%B8%EB%A6%AC%EC%88%9C%ED%9A%8C%EC%A0%95%EB%A6%AC/</id> <content src="https://off-dngw.github.io/posts/%ED%8A%B8%EB%A6%AC%EC%88%9C%ED%9A%8C%EC%A0%95%EB%A6%AC/" /> <author> <name>DongWoo Kim</name> </author> <category term="자료구조" /> <summary> 자료구조 트리 순회 정리 이진 트리 순회 전위 순회 중위 순회 후위 순회 이진 트리 순회 이진 트리에 있는 모드 노드들을 한번씩 모두 방문하요 노드가 가지고 있는 데이터를 처리하는 것을 순회라고 합니다. 리스트나 스택, 큐와 같은 선형 자료구조는 순회하는 방법이 한 가지였지만, 트리는 계층적인 구조를 가지고 있기 때문에 여러가지 순회 방법이 있습니다. 그리고 각 노드들을 순회할 때는 재귀적으로 반복하게 됩니다. 전위 순회 전위 순회는 현재 노드를 방문하는 D작업을 가장 먼저 수행하여 DLR순서로 순회하는 방법입니다. 현재 노드를 방문한다 = D 현재 노드의 왼쪽 서브 트리로 이동한다 = L 현재 노드의 오른쪽 서브 트리로 이동한다 ... </summary> </entry> <entry><title>자료구조 트리 개념</title><link href="https://off-dngw.github.io/posts/%ED%8A%B8%EB%A6%AC%EA%B8%B0%EC%B4%88/" rel="alternate" type="text/html" title="자료구조 트리 개념" /><published>2022-01-25T00:00:00+09:00</published> <updated>2022-01-25T11:21:00+09:00</updated> <id>https://off-dngw.github.io/posts/%ED%8A%B8%EB%A6%AC%EA%B8%B0%EC%B4%88/</id> <content src="https://off-dngw.github.io/posts/%ED%8A%B8%EB%A6%AC%EA%B8%B0%EC%B4%88/" /> <author> <name>DongWoo Kim</name> </author> <category term="자료구조" /> <summary> 트리 트리의 개념 트리의 용어 정리 트리의 특징 트리의 개념 트리는 노드로 이루어진 자료 구조 트리는 하나의 루트 노드를 갖는다. 루트 노드는 0개 이상의 자식 노드를 갖고 있다. 그 자식 노드 또한 0개 이상의 자식 노드를 갖고 있고, 이는 반복적으로 정의된다. 노드(node)들과 노드들을 연결하는 간선(edge)들로 구성되어 있다. 트리에는 사이클(cycle)이 존재할 수 없다. 노드들은 특정 순서로 나열될 수도 있고 그럴 수 없을 수도 있다. 각각의 노드는 부모 노드로의 연결이 있을 수도 있고 없을 수도 있다. 각각의 노드는 어떤 자료형으로도 표현 가능하다. 트리의 용어 정리 깊이(depth) : 트리 구조에서는 루트로... </summary> </entry> <entry><title>SQL 트랜잭션</title><link href="https://off-dngw.github.io/posts/%ED%8A%B8%EB%9E%9C%EC%9E%AD%EC%85%98/" rel="alternate" type="text/html" title="SQL 트랜잭션" /><published>2021-12-22T00:00:00+09:00</published> <updated>2021-12-22T00:00:00+09:00</updated> <id>https://off-dngw.github.io/posts/%ED%8A%B8%EB%9E%9C%EC%9E%AD%EC%85%98/</id> <content src="https://off-dngw.github.io/posts/%ED%8A%B8%EB%9E%9C%EC%9E%AD%EC%85%98/" /> <author> <name>DongWoo Kim</name> </author> <category term="SQL" /> <summary> 트랜잭션(Transaction) 트랜잭션 이란? 트랜잭션의 특징 트랜잭션의 ACID Atomicity(원자성) Consistency(일관성) Isolation(고립성) Durability(지속성) 트랜잭션의 연산 및 상태 Commit 연산 Rollback 연산 트랜잭션 이란? 데이터베이스의 상태를 변환시키는 하나의 논리적 기능을 수행하기 위한 작업의 단위 또는 한꺼번에 모두 수행되어야 할 일련의 연산들을 의미한다. 트랜잭션의 특징 데이터베이스 시스템에서 병행 제어 및 회복 작업 시 처리되는 논리적 단위 입니다. 사용자가 시스템에 대한 서비스 요구 시 ... </summary> </entry> </feed>
